---
import { getAssetUrl } from '../utils/assetUtils';

export interface Props {
  title: string;
  subtitle?: string;
  badge?: string;
  badgeIcon?: string;
  ctaText?: string;
  ctaLink?: string;
  secondaryCTAText?: string;
  secondaryCTALink?: string;
  withStats?: boolean;
  highContrast?: boolean;
}

const {
  title,
  subtitle,
  badge,
  badgeIcon,
  ctaText = "Get Started",
  ctaLink = "/resources",
  secondaryCTAText,
  secondaryCTALink,
  withStats = false,
  highContrast = false
} = Astro.props;

// Get asset URL for the background image
const heroBackgroundImage = getAssetUrl('/images/optimized/ocean-shores-transparency-xl.webp');
---

<!-- Preload critical hero image -->
<link rel="preload" as="image" href={heroBackgroundImage} fetchpriority="high">

<section class={`hero ${highContrast ? 'high-contrast' : ''}`}>
  <div class="hero-content">
    {badge && (
      <div class="hero-badge">
        {badgeIcon && <span class="hero-badge-icon">{badgeIcon}</span>}
        {badge}
      </div>
    )}
    <h1>
      <slot name="title-highlight-start"></slot>
      <span class="highlight"><slot name="title-highlight"></slot></span>
      <slot name="title-highlight-end"></slot>
      {!Astro.slots.has('title-highlight') && title}
    </h1>
    
    {subtitle && <p class="hero-subtitle">{subtitle}</p>}
    
    {withStats && (
      <div class="hero-stats">
        <div class="stat-item">
          <span class="stat-icon">üåé</span>
          <p class="stat-text">60+ Countries<br/>Visited</p>
        </div>
        <div class="stat-item">
          <span class="stat-icon">üíº</span>
          <p class="stat-text">10+ Years<br/>Remote Work</p>
        </div>
        <div class="stat-item">
          <span class="stat-icon">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>
          <p class="stat-text">Family Travel<br/>Expert</p>
        </div>
      </div>
    )}
    
    <div class="hero-actions">
      <a href={ctaLink} class="btn btn-primary">{ctaText}</a>
      {secondaryCTAText && secondaryCTALink && (
        <a href={secondaryCTALink} class="btn btn-secondary">{secondaryCTAText}</a>
      )}
    </div>
  </div>
  
  <slot name="after-content"></slot>
</section>

<style define:vars={{ heroBackgroundImage: `url('${heroBackgroundImage}')` }}>
  /* Hero Component Styles */
  .hero {
    align-items: center;
    background: var(--heroBackgroundImage) no-repeat center center;
    background-size: cover;
    color: var(--dark);
    display: flex;
    min-height: 80vh;
    padding: 6rem 0;
    position: relative;
    text-align: center;
    background-attachment: scroll;
    will-change: transform;
  }
  
  /* High contrast version for better accessibility */
  .hero.high-contrast::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.75);
    z-index: 1;
  }
  
  .hero-content {
    margin: 0 auto;
    max-width: 800px;
    position: relative;
    z-index: 2;
  }
  
  .hero-badge {
    align-items: center;
    background: var(--primary-color);
    border-radius: 25px;
    color: var(--white);
    display: inline-flex;
    font-size: 0.9rem;
    font-weight: 600;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
    padding: 0.5rem 1rem;
  }
  
  .hero h1 {
    color: var(--dark);
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    text-shadow: 0 2px 4px hsla(0, 0%, 100%, 0.8);
  }
  
  .highlight {
    color: #2a9d8f;
    font-family: 'LemonTuesday', 'Shadows Into Light', cursive;
  }
  
  .hero-subtitle {
    color: var(--dark);
    font-size: 1.25rem;
    font-weight: 500;
    line-height: 1.6;
    margin-bottom: 2rem;
    text-shadow: 0 1px 2px hsla(0, 0%, 100%, 0.8);
  }
  
  .hero-stats {
    display: flex;
    gap: 2rem;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .stat-item {
    text-align: center;
  }
  
  .stat-icon {
    display: block;
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }
  
  .stat-text {
    color: var(--dark);
    font-size: 0.9rem;
    font-weight: 600;
    line-height: 1.3;
    text-shadow: 0 1px 2px hsla(0, 0%, 100%, 0.8);
  }
  
  .hero-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }
  
  /* Responsive styles */
  @media (max-width: 768px) {
    .hero h1 {
      font-size: 2.5rem;
    }
    
    .hero-stats {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>
