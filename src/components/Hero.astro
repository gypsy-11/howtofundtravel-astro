---
export interface Props {
  badgeIcon?: string;
  badgeText?: string;
  title: string;
  highlightText?: string;
  subtitle?: string;
  showStats?: boolean;
  customStats?: Array<{
    icon: string;
    text: string;
  }>;
  showActions?: boolean;
  primaryAction?: {
    text: string;
    url: string;
  };
  secondaryAction?: {
    text: string;
    url: string;
  };
}

const {
  badgeIcon = "‚≠ê",
  badgeText = "Family Travel Expert",
  title,
  highlightText,
  subtitle,
  showStats = false,
  customStats,
  showActions = false,
  primaryAction,
  secondaryAction
} = Astro.props;
---

<section class="hero" aria-labelledby="hero-heading">
  <!-- Preload hero background image for LCP optimization -->
  <link rel="preload" as="image" href="/images/optimized/ocean-shores-transparency-xl.webp" fetchpriority="high">
  
  <div class="container">
    <div class="hero-content">
      <div class="hero-badge">
        <span class="badge-icon">{badgeIcon}</span>
        {badgeText}
      </div>
      
      <h1 id="hero-heading">
        {title}
        {highlightText && <span class="highlight">{highlightText}</span>}
      </h1>
      
      {subtitle && <p class="hero-subtitle">{subtitle}</p>}
      
      {showStats && (
        <div class="hero-stats">
          {customStats ? (
            customStats.map((stat) => (
              <div class="stat-item">
                <span class="stat-icon">{stat.icon}</span>
                <span class="stat-text" set:html={stat.text}></span>
              </div>
            ))
          ) : (
            <>
              <div class="stat-item">
                <span class="stat-icon">üåç</span>
                <span class="stat-text">5+ Years<br>Traveling</span>
              </div>
              <div class="stat-item">
                <span class="stat-icon">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>
                <span class="stat-text">Family of<br>Six</span>
              </div>
              <div class="stat-item">
                <span class="stat-icon">üí∞</span>
                <span class="stat-text">Multiple Income<br>Streams</span>
              </div>
            </>
          )}
        </div>
      )}
      
      {showActions && primaryAction && (
        <div class="hero-actions">
          <a href={primaryAction.url} class="btn btn-primary">{primaryAction.text}</a>
          {secondaryAction && (
            <a href={secondaryAction.url} class="btn btn-secondary">{secondaryAction.text}</a>
          )}
        </div>
      )}
    </div>
  </div>
</section>

<style>
  /* Hero-specific styles optimized for LCP */
  .hero {
    align-items: center;
    background: url('/images/optimized/ocean-shores-transparency-xl.webp') no-repeat center center;
    background-size: cover;
    color: var(--dark);
    display: flex;
    min-height: 80vh;
    padding: 6rem 0;
    position: relative;
    text-align: center;
    /* Optimize background image loading */
    background-attachment: scroll;
    will-change: transform;
  }
  
  .hero-content {
    margin: 0 auto;
    max-width: 800px;
    position: relative;
    z-index: 2;
  }
  
  .hero-badge {
    align-items: center;
    background: var(--primary-color);
    border-radius: 25px;
    color: var(--white);
    display: inline-flex;
    font-size: 0.9rem;
    font-weight: 600;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
    padding: 0.5rem 1rem;
  }
  
  .hero h1 {
    color: var(--dark);
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    text-shadow: 0 2px 4px hsla(0, 0%, 100%, 0.8);
  }
  
  .highlight {
    color: #2a9d8f;
    font-family: 'LemonTuesday', 'Shadows Into Light', cursive;
  }
  
  .hero-subtitle {
    color: var(--dark);
    font-size: 1.25rem;
    font-weight: 500;
    line-height: 1.6;
    margin-bottom: 2rem;
    text-shadow: 0 1px 2px hsla(0, 0%, 100%, 0.8);
  }
  
  .hero-stats {
    display: flex;
    gap: 2rem;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .stat-item {
    text-align: center;
  }
  
  .stat-icon {
    display: block;
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }
  
  .stat-text {
    color: var(--dark);
    font-size: 0.9rem;
    font-weight: 600;
    line-height: 1.3;
    text-shadow: 0 1px 2px hsla(0, 0%, 100%, 0.8);
  }
  
  .hero-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }
  
  /* Responsive design */
  @media (max-width: 768px) {
    .hero h1 {
      font-size: 2.5rem;
    }
    
    .hero-stats {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>
